[{"/home/acquaint/projects/localMailingSystem/local-mailing-system/src/reportWebVitals.js":"1","/home/acquaint/projects/localMailingSystem/local-mailing-system/src/components/Register.js":"2","/home/acquaint/projects/localMailingSystem/local-mailing-system/src/components/Home.js":"3","/home/acquaint/projects/localMailingSystem/local-mailing-system/src/components/BoardModerator.js":"4","/home/acquaint/projects/localMailingSystem/local-mailing-system/src/actions/message.js":"5","/home/acquaint/projects/localMailingSystem/local-mailing-system/src/actions/types.js":"6","/home/acquaint/projects/localMailingSystem/local-mailing-system/src/services/auth-header.js":"7","/home/acquaint/projects/localMailingSystem/local-mailing-system/src/App.js":"8","/home/acquaint/projects/localMailingSystem/local-mailing-system/src/components/BoardUser.js":"9","/home/acquaint/projects/localMailingSystem/local-mailing-system/src/helpers/history.js":"10","/home/acquaint/projects/localMailingSystem/local-mailing-system/src/components/BoardAdmin.js":"11","/home/acquaint/projects/localMailingSystem/local-mailing-system/src/services/auth.service.js":"12","/home/acquaint/projects/localMailingSystem/local-mailing-system/src/services/user.service.js":"13","/home/acquaint/projects/localMailingSystem/local-mailing-system/src/components/Login.js":"14","/home/acquaint/projects/localMailingSystem/local-mailing-system/src/reducers/index.js":"15","/home/acquaint/projects/localMailingSystem/local-mailing-system/src/index.js":"16","/home/acquaint/projects/localMailingSystem/local-mailing-system/src/reducers/auth.js":"17","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/store.js":"18","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/components/Login.js":"19","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/actions/auth.js":"20","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/reducers/index.js":"21","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/services/user.service.js":"22","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/services/auth-header.js":"23","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/components/Register.js":"24","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/App.js":"25","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/components/Inbox.js":"26","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/components/Profile.js":"27","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/services/auth.service.js":"28","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/Config.js":"29","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/components/Sent.js":"30","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/actions/message.js":"31","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/reducers/auth.js":"32","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/components/Compose.js":"33","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/actions/types.js":"34","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/reportWebVitals.js":"35","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/index.js":"36","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/services/mail.service.js":"37","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/helpers/history.js":"38","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/actions/mail.js":"39","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/reducers/message.js":"40","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/components/SentView.js":"41","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/components/InboxView.js":"42"},{"size":362,"mtime":1610021370481,"results":"43","hashOfConfig":"44"},{"size":4338,"mtime":1610025263814,"results":"45","hashOfConfig":"44"},{"size":673,"mtime":1610023051833,"results":"46","hashOfConfig":"44"},{"size":0,"mtime":1610023023445,"results":"47","hashOfConfig":"44"},{"size":206,"mtime":1610022201491,"results":"48","hashOfConfig":"44"},{"size":304,"mtime":1610022188588,"results":"49","hashOfConfig":"44"},{"size":375,"mtime":1610024223201,"results":"50","hashOfConfig":"44"},{"size":3985,"mtime":1610024807529,"results":"51","hashOfConfig":"44"},{"size":734,"mtime":1610023088769,"results":"52","hashOfConfig":"44"},{"size":95,"mtime":1610023132460,"results":"53","hashOfConfig":"44"},{"size":0,"mtime":1610023035129,"results":"54","hashOfConfig":"44"},{"size":642,"mtime":1610024083999,"results":"55","hashOfConfig":"44"},{"size":587,"mtime":1610024086027,"results":"56","hashOfConfig":"44"},{"size":3273,"mtime":1610022874937,"results":"57","hashOfConfig":"44"},{"size":157,"mtime":1610022359581,"results":"58","hashOfConfig":"44"},{"size":616,"mtime":1610024521045,"results":"59","hashOfConfig":"44"},{"size":1041,"mtime":1610022338005,"results":"60","hashOfConfig":"44"},{"size":340,"mtime":1610022654440,"results":"61","hashOfConfig":"62"},{"size":3319,"mtime":1610105603063,"results":"63","hashOfConfig":"62"},{"size":1804,"mtime":1610113463951,"results":"64","hashOfConfig":"62"},{"size":157,"mtime":1610022359581,"results":"65","hashOfConfig":"62"},{"size":258,"mtime":1610109970545,"results":"66","hashOfConfig":"62"},{"size":407,"mtime":1610111056403,"results":"67","hashOfConfig":"62"},{"size":4979,"mtime":1610106162289,"results":"68","hashOfConfig":"62"},{"size":3637,"mtime":1610340526572,"results":"69","hashOfConfig":"62"},{"size":2763,"mtime":1610355226343,"results":"70","hashOfConfig":"62"},{"size":835,"mtime":1610106624135,"results":"71","hashOfConfig":"62"},{"size":649,"mtime":1610106070130,"results":"72","hashOfConfig":"62"},{"size":127,"mtime":1610097349352,"results":"73","hashOfConfig":"62"},{"size":1789,"mtime":1610260328016,"results":"74","hashOfConfig":"62"},{"size":206,"mtime":1610022201491,"results":"75","hashOfConfig":"62"},{"size":1041,"mtime":1610022338005,"results":"76","hashOfConfig":"62"},{"size":6355,"mtime":1610354703143,"results":"77","hashOfConfig":"62"},{"size":514,"mtime":1610302561943,"results":"78","hashOfConfig":"62"},{"size":362,"mtime":1610021370481,"results":"79","hashOfConfig":"62"},{"size":616,"mtime":1610024521045,"results":"80","hashOfConfig":"62"},{"size":1507,"mtime":1610347187806,"results":"81","hashOfConfig":"62"},{"size":95,"mtime":1610023132460,"results":"82","hashOfConfig":"62"},{"size":2056,"mtime":1610302578691,"results":"83","hashOfConfig":"62"},{"size":353,"mtime":1610022315033,"results":"84","hashOfConfig":"62"},{"size":1563,"mtime":1610292302994,"results":"85","hashOfConfig":"62"},{"size":3529,"mtime":1610348956145,"results":"86","hashOfConfig":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kev5j",{"filePath":"89","messages":"90","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"97"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"1ntoxyo",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"131"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"131"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},"/home/acquaint/projects/localMailingSystem/local-mailing-system/src/reportWebVitals.js",[],"/home/acquaint/projects/localMailingSystem/local-mailing-system/src/components/Register.js",["189"],"import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport { register } from \"../actions/auth\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst validEmail = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vfullname = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The fullname must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nconst Register = () => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [fullname, setFullname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n\n  const { message } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n\n  const onChangeFullname = (e) => {\n    const username = e.target.value;\n    setFullname(username);\n  };\n\n  const onChangeEmail = (e) => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    setSuccessful(false);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      dispatch(register(username, email, password))\n        .then(() => {\n          setSuccessful(true);\n        })\n        .catch(() => {\n          setSuccessful(false);\n        });\n    }\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form onSubmit={handleRegister} ref={form}>\n          {!successful && (\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Full Name</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"fullname\"\n                  value={fullname}\n                  onChange={onChangeFullname}\n                  validations={[required, vfullname]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  value={email}\n                  onChange={onChangeEmail}\n                  validations={[required, validEmail]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChangePassword}\n                  validations={[required, vpassword]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <button className=\"btn btn-primary btn-block\">Sign Up</button>\n              </div>\n            </div>\n          )}\n\n          {message && (\n            <div className=\"form-group\">\n              <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;","/home/acquaint/projects/localMailingSystem/local-mailing-system/src/components/Home.js",[],["190","191"],"/home/acquaint/projects/localMailingSystem/local-mailing-system/src/components/BoardModerator.js",[],["192","193"],"/home/acquaint/projects/localMailingSystem/local-mailing-system/src/actions/message.js",[],"/home/acquaint/projects/localMailingSystem/local-mailing-system/src/actions/types.js",[],["194","195"],"/home/acquaint/projects/localMailingSystem/local-mailing-system/src/services/auth-header.js",[],"/home/acquaint/projects/localMailingSystem/local-mailing-system/src/App.js",[],"/home/acquaint/projects/localMailingSystem/local-mailing-system/src/components/BoardUser.js",[],"/home/acquaint/projects/localMailingSystem/local-mailing-system/src/helpers/history.js",[],"/home/acquaint/projects/localMailingSystem/local-mailing-system/src/components/BoardAdmin.js",[],"/home/acquaint/projects/localMailingSystem/local-mailing-system/src/services/auth.service.js",["196"],"/home/acquaint/projects/localMailingSystem/local-mailing-system/src/services/user.service.js",["197"],"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://localhost:8080/api/test/\";\n\nconst getPublicContent = () => {\n  return axios.get(API_URL + \"all\");\n};\n\nconst getUserBoard = () => {\n  return axios.get(API_URL + \"user\", { headers: authHeader() });\n};\n\nconst getModeratorBoard = () => {\n  return axios.get(API_URL + \"mod\", { headers: authHeader() });\n};\n\nconst getAdminBoard = () => {\n  return axios.get(API_URL + \"admin\", { headers: authHeader() });\n};\n\nexport default {\n  getPublicContent,\n  getUserBoard,\n  getModeratorBoard,\n  getAdminBoard,\n};","/home/acquaint/projects/localMailingSystem/local-mailing-system/src/components/Login.js",[],"/home/acquaint/projects/localMailingSystem/local-mailing-system/src/reducers/index.js",[],"/home/acquaint/projects/localMailingSystem/local-mailing-system/src/index.js",[],"/home/acquaint/projects/localMailingSystem/local-mailing-system/src/reducers/auth.js",["198"],"/home/acquaint/projects/mailingsystemdemo/Reactjs/src/store.js",[],["199","200"],"/home/acquaint/projects/mailingsystemdemo/Reactjs/src/components/Login.js",[],["201","202"],"/home/acquaint/projects/mailingsystemdemo/Reactjs/src/actions/auth.js",[],"/home/acquaint/projects/mailingsystemdemo/Reactjs/src/reducers/index.js",[],"/home/acquaint/projects/mailingsystemdemo/Reactjs/src/services/user.service.js",["203"],"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport config from \"../Config\";\n\nconst API_URL = config.apiUrl;\n\nconst getUsers = () => {\n  return axios.get(API_URL + \"users\", { headers: authHeader() });\n};\n\nexport default {\n  getUsers,\n};","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/services/auth-header.js",[],"/home/acquaint/projects/mailingsystemdemo/Reactjs/src/components/Register.js",[],["204","205"],"/home/acquaint/projects/mailingsystemdemo/Reactjs/src/App.js",[],"/home/acquaint/projects/mailingsystemdemo/Reactjs/src/components/Inbox.js",["206","207"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MailService from \"../services/mail.service\";\nimport { updateInbox } from \"../actions/mail\";\n\nconst Inbox = (props) => {\n  const { user: currentUser } = useSelector((state) => state.auth);\n  const [inboxList, setInboxList] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const onClickOnUnread = (e, messageId, isReadData) =>{\n    e.preventDefault();\n    let data = {\n        messageId: messageId,\n        isRead: isReadData\n    }\n\n    dispatch(updateInbox(data))\n        .then(() => {\n          props.history.push(\"/inbox\");\n          window.location.reload();\n        })\n        .catch(() => {\n        });\n\n  }\n\n\n\n  useEffect(() => {\n    if(!inboxList) {\n      MailService.getInboxData().then(\n        (response) => {\n          setInboxList(response.data.data);\n        },\n        (error) => {\n          const _inboxList =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n            setInboxList(_inboxList);\n        }\n      );\n    } else {\n      return null\n    }\n  }, [inboxList]);\n\n  if (!currentUser) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>\n           Inbox\n        </h3>\n      </header>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Full name</th>\n            <th scope=\"col\">Subject</th>\n            <th scope=\"col\"></th>\n            <th scope=\"col\"></th>\n          </tr>\n        </thead>\n        <tbody>\n          {inboxList && inboxList.length > 0 && \n              inboxList.map( (inboxData, index) => {\n                return (\n                  <tr className={\n                    inboxData.isRead === 1 ? \"read-view\" :\"unread-view\"\n                  }>\n                    <th scope=\"row\">{index + 1}</th>\n                    <td>{inboxData._fromUserId.fullName}</td>\n                    <td>{inboxData.subject}</td>\n                    <td><a href={'/inboxview/'+ inboxData.id}>view</a></td>\n                    {inboxData.isRead === 0 &&\n                      <td><a href=\"#\" onClick={(e)=>onClickOnUnread(e,inboxData.id, 1)}>Read</a></td>\n                    }\n                    {inboxData.isRead === 1 &&\n                      <td><a href=\"#\" onClick={(e)=>onClickOnUnread(e,inboxData.id, 0)}>Unread</a></td>\n                    }\n                  </tr>\n                )\n              })\n            }\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Inbox;","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/components/Profile.js",[],"/home/acquaint/projects/mailingsystemdemo/Reactjs/src/services/auth.service.js",["208"],"import axios from \"axios\";\nimport config from \"../Config\";\n\nconst API_URL = config.apiUrl;\n\nconst register = (fullName, email, password) => {\n  return axios.post(API_URL + \"register\", {\n    fullName,\n    email,\n    password,\n  });\n};\n\nconst login = (email, password) => {\n  return axios\n    .post(API_URL + \"login\", {\n      email,\n      password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nexport default {\n  register,\n  login,\n  logout,\n};","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/Config.js",[],"/home/acquaint/projects/mailingsystemdemo/Reactjs/src/components/Sent.js",[],["209","210"],"/home/acquaint/projects/mailingsystemdemo/Reactjs/src/actions/message.js",[],"/home/acquaint/projects/mailingsystemdemo/Reactjs/src/reducers/auth.js",["211"],"import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n  } from \"../actions/types\";\n  \n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  \n  const initialState = user\n    ? { isLoggedIn: true, user }\n    : { isLoggedIn: false, user: null };\n  \n  export default function (state = initialState, action) {\n    const { type, payload } = action;\n  \n    switch (type) {\n      case REGISTER_SUCCESS:\n        return {\n          ...state,\n          isLoggedIn: false,\n        };\n      case REGISTER_FAIL:\n        return {\n          ...state,\n          isLoggedIn: false,\n        };\n      case LOGIN_SUCCESS:\n        return {\n          ...state,\n          isLoggedIn: true,\n          user: payload.user,\n        };\n      case LOGIN_FAIL:\n        return {\n          ...state,\n          isLoggedIn: false,\n          user: null,\n        };\n      case LOGOUT:\n        return {\n          ...state,\n          isLoggedIn: false,\n          user: null,\n        };\n      default:\n        return state;\n    }\n  }","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/components/Compose.js",["212","213"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport Textarea from \"react-validation/build/textarea\"\nimport Select from \"react-validation/build/select\"\nimport CheckButton from \"react-validation/build/button\";\nimport { Redirect } from 'react-router-dom';\n\nimport UserService from \"../services/user.service\";\nimport { composeMessage } from \"../actions/mail\";\nimport MailService from \"../services/mail.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\n\nconst Compose = (props) => {\n  console.log(\"props ==>\", props);\n  const messageIdInit = !!props.match.params.messageId ? props.match.params.messageId : 0 \n  const form = useRef();\n  const checkBtn = useRef();\n  const { user: currentUser } = useSelector((state) => state.auth);\n\n  const [toUserId, setToUserId] = useState(\"\");\n  const [msg, setMessage] = useState(\"\");\n  const [subject, setSubject] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [content, setContent] = useState(\"\");\n  const [messageId, setMessageId] = useState(messageIdInit);\n\n  const { message } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n\n  const onChangeToUser = (e) => {\n    const toUserId = e.target.value;\n    setToUserId(toUserId);\n  };\n\n  const onChangeMessage = (e) => {\n    const msg = e.target.value;\n    setMessage(msg);\n  };\n\n  const onChangeSubject= (e) => {\n    const subject = e.target.value;\n    setSubject(subject);\n  };\n\n  const handleCompose = (e) => {\n    e.preventDefault();\n\n    setSuccessful(false);\n    setLoading(true);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      let fromUserId = currentUser.data.id;\n      dispatch(composeMessage(fromUserId, toUserId, subject, msg, messageId))\n        .then(() => {\n            setLoading(false);\n            setSuccessful(true);\n          \n        })\n        .catch(() => {\n          setSuccessful(false);\n          setLoading(false);\n        });\n    }\n  };\n\n  const onClickOk = () => {\n    props.history.push(\"/compose\");\n    window.location.reload();\n  }\n\n  useEffect(() => {\n    if(messageId !== 0) {\n      MailService.getMessageById(messageId).then(\n        (response) => {\n          let resData = response.data.data\n          console.log(\"resData ==>\", resData);\n          setToUserId(!!resData._fromUserId && resData._fromUserId.id);\n          //setMessage(resData.message);\n          setSubject('Re:'+resData.subject);\n        },\n        (error) => {\n          const _errorMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n            console.log(\"_errorMessage ==>\", _errorMessage);\n        }\n      );\n    } else {\n      return null\n    }\n\n  }, [toUserId, msg, subject]);\n\n  useEffect(() => {\n    if(!content) {\n      UserService.getUsers().then(\n        (response) => {\n          setContent(response.data.data);\n        },\n        (error) => {\n          const _content =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setContent(_content);\n        }\n      );\n    } else {\n      return null\n    }\n  }, [content]);\n\n  if (!currentUser) {\n    return <Redirect to=\"/login\" />;\n  }\n  \n  \n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card compose-container\">\n        <Form onSubmit={handleCompose} ref={form}>\n          {!successful && (\n            <div>\n              { messageId === 0 && (\n                <div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"toUserId\">To</label>\n                    <Select className=\"form-control\" name='toUserId' value={toUserId} validations={[required]} onChange={onChangeToUser}>\n                        <option value=''>Select User</option>\n                        {content && content.length > 0 && \n                          content.map( user => {\n                            return <option value={user.id}>{user.fullName}</option>\n                          })\n                        }\n                    </Select>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"subject\">Subject</label>\n                    <Input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"subject\"\n                      value={subject}\n                      onChange={onChangeSubject}\n                      validations={[required]}\n                    />\n                  </div>\n                </div>\n              )}\n\n              <div className=\"form-group\">\n                <label htmlFor=\"message\">Message</label>\n                <Textarea\n                  type=\"text\"\n                  className=\"form-control compose-text-area\"\n                  name=\"msg\"\n                  value={msg}\n                  onChange={onChangeMessage}\n                  validations={[required]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <button className=\"btn btn-primary btn-block\" disabled={loading}>\n                {loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                  <span>Send</span>\n                </button>\n              </div>\n            </div>\n          )}\n\n          {message && successful && (\n            <div className=\"form-group\">\n              <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\n                {message}\n              </div>\n              <button className=\"btn btn-primary btn-block\" onClick={onClickOk}>\n                <span>Ok</span>\n              </button>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Compose;","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/actions/types.js",[],"/home/acquaint/projects/mailingsystemdemo/Reactjs/src/reportWebVitals.js",[],"/home/acquaint/projects/mailingsystemdemo/Reactjs/src/index.js",[],"/home/acquaint/projects/mailingsystemdemo/Reactjs/src/services/mail.service.js",["214"],"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport config from \"../Config\";\n\nconst API_URL = config.apiUrl;\n\nconst getInboxData = () => {\n  return axios.get(API_URL + \"inbox\" , { headers: authHeader() });\n};\n\nconst updateInbox = (data) => {\n  return axios.put(API_URL + \"updateInbox\", data, { headers: authHeader() });\n};\n\nconst composeMessage = (fromUserId, toUserId, subject, message, messageId) => {\n  let data = {\n    fromUserId,\n    toUserId,\n    subject,\n    message,\n    messageId,\n  };\n\n  return axios.post(API_URL + \"composeMessage\", data, { headers: authHeader() });\n};\n\nconst getSentMessageById = (messageId) => {\n  console.log(\"messageId ==>\", messageId);\n  let data = {\n    messageId: messageId,\n  };\n  return axios.post(API_URL + \"getSentMessageById\", data, { headers: authHeader() });\n}\n\nconst getInboxMessageById = (messageId) => {\n  console.log(\"messageId ==>\", messageId);\n  let data = {\n    messageId: messageId,\n  };\n  return axios.post(API_URL + \"getInboxMessageById\", data, { headers: authHeader() });\n}\n\nconst getMessageById = (messageId) => {\n  console.log(\"messageId ==>\", messageId);\n  let data = {\n    messageId: messageId,\n  };\n  return axios.post(API_URL + \"getMessageById\", data, { headers: authHeader() });\n}\n\nconst getSentData = () => {\n  return axios.get(API_URL + \"sent\", { headers: authHeader() });\n};\n\n\nexport default {\n  getInboxData,\n  getSentData,\n  updateInbox,\n  composeMessage,\n  getSentMessageById,\n  getInboxMessageById,\n  getMessageById\n};","/home/acquaint/projects/mailingsystemdemo/Reactjs/src/helpers/history.js",[],"/home/acquaint/projects/mailingsystemdemo/Reactjs/src/actions/mail.js",[],"/home/acquaint/projects/mailingsystemdemo/Reactjs/src/reducers/message.js",["215"],"import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}",["216","217"],"/home/acquaint/projects/mailingsystemdemo/Reactjs/src/components/SentView.js",[],"/home/acquaint/projects/mailingsystemdemo/Reactjs/src/components/InboxView.js",["218"],"import React, { useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MailService from \"../services/mail.service\";\nimport { updateInbox } from \"../actions/mail\";\n\nconst InboxView = (props) => {\n  console.log(\"props ==>\", props);\n  const messageId = props.match.params.id\n  const { user: currentUser } = useSelector((state) => state.auth);\n  const [inboxMessage, setInboxMessage] = useState(\"\");\n  const { message } = useSelector(state => state.message);\n\n  const dispatch = useDispatch();\n\n  const onClickOnUnread = (e) =>{\n    e.preventDefault();\n    let data = {\n        messageId: messageId,\n        isRead: 0\n    }\n\n    dispatch(updateInbox(data))\n        .then(() => {\n          props.history.push(\"/inbox\");\n          window.location.reload();\n        })\n        .catch(() => {\n        });\n\n  }\n\n  const onClickOnReplay = (e) =>{\n    e.preventDefault();\n\n    let path = \"/compose/\"+messageId;\n    props.history.push(path);\n    window.location.reload();\n    \n  }\n\n\n  useEffect(() => {\n    if(!inboxMessage) {\n      MailService.getInboxMessageById(messageId).then(\n        (response) => {\n            setInboxMessage(response.data.data);\n        },\n        (error) => {\n          const _inboxMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n            setInboxMessage(_inboxMessage);\n        }\n      );\n    } else {\n      return null\n    }\n  }, [inboxMessage, messageId]);\n\n  if (!currentUser) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>\n           Inbox View Meesage\n        </h3>\n      </header>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">\n                <button type=\"button\" className=\"btn btn-primary\" onClick={onClickOnUnread}>Unread</button>\n            </th>\n            <th scope=\"col\">\n              <button type=\"button\" className=\"btn btn-primary\" onClick={onClickOnReplay}>Reply</button>\n            </th>\n            <th scope=\"col\"></th>\n            <th scope=\"col\"></th>\n          </tr>\n        </thead>\n      </table>\n      {/* <p>\n        <strong>From:</strong> {!!inboxMessage._fromUserId && inboxMessage._fromUserId.fullName}\n      </p>\n      <p>\n        <strong>To:</strong> {currentUser.data.fullName}\n      </p>\n      <p>\n        <strong>Subject:</strong> {inboxMessage.subject}\n      </p>\n      <p>\n        <strong>Message:</strong> {inboxMessage.message}\n      </p> */}\n\n      {inboxMessage && inboxMessage.length > 0 && \n        inboxMessage.map( (inboxData, index) => {\n          return (\n            <>\n            <div><h5>{inboxData.messageId === 0 ? 'To me': ( index > 0 ? 'Reply': 'To me' )}</h5></div>\n            <ul>\n              <li>\n                <strong>From:</strong> {!!inboxData._fromUserId && inboxData._fromUserId.fullName}\n              </li>\n              <li>\n                <strong>To:</strong> {!!inboxData._toUserId && inboxData._toUserId.fullName}\n              </li>\n              <li>\n                <strong>Subject:</strong> {inboxData.subject}\n              </li>\n              <li>\n                <strong>Message:</strong> {inboxData.message}\n              </li>\n            </ul>\n            <hr></hr>\n            </>\n          )\n        })\n      }\n\n    </div>\n  );\n};\n\nexport default InboxView;",{"ruleId":"219","severity":2,"message":"220","line":86,"column":25,"nodeType":"221","messageId":"222","endLine":86,"endColumn":33},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"223","replacedBy":"227"},{"ruleId":"225","replacedBy":"228"},{"ruleId":"223","replacedBy":"229"},{"ruleId":"225","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":32,"column":1,"nodeType":"233","endLine":36,"endColumn":3},{"ruleId":"231","severity":1,"message":"232","line":22,"column":1,"nodeType":"233","endLine":27,"endColumn":3},{"ruleId":"231","severity":1,"message":"234","line":15,"column":3,"nodeType":"233","endLine":50,"endColumn":4},{"ruleId":"223","replacedBy":"235"},{"ruleId":"225","replacedBy":"236"},{"ruleId":"223","replacedBy":"237"},{"ruleId":"225","replacedBy":"238"},{"ruleId":"231","severity":1,"message":"232","line":11,"column":1,"nodeType":"233","endLine":13,"endColumn":3},{"ruleId":"223","replacedBy":"239"},{"ruleId":"225","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":86,"column":27,"nodeType":"243","endLine":86,"endColumn":89},{"ruleId":"241","severity":1,"message":"242","line":89,"column":27,"nodeType":"243","endLine":89,"endColumn":89},{"ruleId":"231","severity":1,"message":"232","line":33,"column":1,"nodeType":"233","endLine":37,"endColumn":3},{"ruleId":"223","replacedBy":"244"},{"ruleId":"225","replacedBy":"245"},{"ruleId":"231","severity":1,"message":"234","line":15,"column":3,"nodeType":"233","endLine":50,"endColumn":4},{"ruleId":"246","severity":1,"message":"247","line":39,"column":21,"nodeType":"221","messageId":"248","endLine":39,"endColumn":33},{"ruleId":"249","severity":1,"message":"250","line":112,"column":6,"nodeType":"251","endLine":112,"endColumn":30,"suggestions":"252"},{"ruleId":"231","severity":1,"message":"232","line":56,"column":1,"nodeType":"233","endLine":64,"endColumn":3},{"ruleId":"231","severity":1,"message":"234","line":5,"column":1,"nodeType":"233","endLine":18,"endColumn":2},{"ruleId":"223","replacedBy":"253"},{"ruleId":"225","replacedBy":"254"},{"ruleId":"246","severity":1,"message":"255","line":12,"column":11,"nodeType":"221","messageId":"248","endLine":12,"endColumn":18},"no-undef","'username' is not defined.","Identifier","undef","no-native-reassign",["256"],"no-negated-in-lhs",["257"],["256"],["257"],["256"],["257"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous function",["256"],["257"],["256"],["257"],["256"],["257"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["256"],["257"],"no-unused-vars","'setMessageId' is assigned a value but never used.","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'messageId'. Either include it or remove the dependency array.","ArrayExpression",["258"],["256"],["257"],"'message' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"259","fix":"260"},"Update the dependencies array to be: [toUserId, msg, subject, messageId]",{"range":"261","text":"262"},[3137,3161],"[toUserId, msg, subject, messageId]"]